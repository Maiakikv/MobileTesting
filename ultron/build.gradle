buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.github.dcendents:android-maven-gradle-plugin:$android_maven_gradle_plugin"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintray_plugin"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext {
    Properties properties = new Properties()
    File propertiesFile = project.rootProject.file('local.properties')
    if (propertiesFile.exists()) {
        properties.load(propertiesFile.newDataInputStream())
    }

    bintrayRepo = properties.getProperty("bintray.repo")
    bintrayName = properties.getProperty("bintray.name")
    bintrayUser = properties.getProperty("bintray.user")
    bintrayKey = properties.getProperty("bintray.apikey")
    publishedGroupId = 'com.atiurin'
    libraryName = 'Ultron'
    artifact = 'ultron'
    libraryDescription = 'Ultron make it easy to write android UI tests.'
    siteUrl = 'https://github.com/alex-tiurin/ultron'
    gitUrl  = 'https://github.com/alex-tiurin/ultron.git'
    libraryVersion = '1.0.1'
    developerId = properties.getProperty("maven.developerId")
    developerName = properties.getProperty("maven.developerName")
    developerEmail = properties.getProperty("maven.developerEmail")
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

ext.versions = [
        'minSdk'            : 21,
        'compileSdk'        : 29,
        'targetSdk'         : 29,
        'buildTools'        : '29.0.3',
        'release'           : libraryVersion,
        'code'              : 1,
        'recyclerview'      : '1.1.0',
        'test'              : '1.3.0',
        'junit'             : '4.13',
        'espresso'          : '3.3.0',
        'uiautomator'       : '2.2.0'
]

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.code
        versionName versions.release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerview}"
    implementation "androidx.test:runner:${versions.test}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.test.espresso:espresso-core:${versions.espresso}"
    implementation "androidx.test.espresso:espresso-contrib:${versions.espresso}"
    implementation "androidx.test.uiautomator:uiautomator:${versions.uiautomator}"
    implementation "androidx.test.espresso:espresso-web:${versions.espresso}"
    testImplementation "junit:junit:${versions.junit}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = bintrayUser
    key = bintrayKey

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}



